/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type {DrizzleToZeroSchema, ZeroCustomType} from 'drizzle-zero';
import type * as drizzleSchema from '../db/schema';

type ZeroSchema = DrizzleToZeroSchema<typeof drizzleSchema>;

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    account: {
      name: 'account',
      columns: {
        id: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'id'
          >,
        },
        accountId: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'accountId'
          >,
          serverName: 'account_id',
        },
        providerId: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'providerId'
          >,
          serverName: 'provider_id',
        },
        userId: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'userId'
          >,
          serverName: 'user_id',
        },
        accessToken: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'accessToken'
          >,
          serverName: 'access_token',
        },
        refreshToken: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'refreshToken'
          >,
          serverName: 'refresh_token',
        },
        idToken: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'idToken'
          >,
          serverName: 'id_token',
        },
        accessTokenExpiresAt: {
          type: 'number',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'accessTokenExpiresAt'
          >,
          serverName: 'access_token_expires_at',
        },
        refreshTokenExpiresAt: {
          type: 'number',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'refreshTokenExpiresAt'
          >,
          serverName: 'refresh_token_expires_at',
        },
        scope: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'scope'
          >,
        },
        password: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'password'
          >,
        },
        createdAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'createdAt'
          >,
          serverName: 'created_at',
        },
        updatedAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'account',
            'updatedAt'
          >,
          serverName: 'updated_at',
        },
      },
      primaryKey: ['id'],
    },
    album: {
      name: 'album',
      columns: {
        id: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'album',
            'id'
          >,
        },
        artistId: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'album',
            'artistId'
          >,
          serverName: 'artist_id',
        },
        title: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'album',
            'title'
          >,
        },
        year: {
          type: 'number',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'album',
            'year'
          >,
        },
      },
      primaryKey: ['id'],
    },
    artist: {
      name: 'artist',
      columns: {
        id: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'artist',
            'id'
          >,
        },
        name: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'artist',
            'name'
          >,
        },
        sortName: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'artist',
            'sortName'
          >,
          serverName: 'sort_name',
        },
        type: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'artist',
            'type'
          >,
        },
        beginDate: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'artist',
            'beginDate'
          >,
          serverName: 'begin_date',
        },
        endDate: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'artist',
            'endDate'
          >,
          serverName: 'end_date',
        },
        popularity: {
          type: 'number',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'artist',
            'popularity'
          >,
        },
      },
      primaryKey: ['id'],
    },
    cartItem: {
      name: 'cartItem',
      columns: {
        userId: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'cartItem',
            'userId'
          >,
          serverName: 'user_id',
        },
        albumId: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'cartItem',
            'albumId'
          >,
          serverName: 'album_id',
        },
        addedAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'cartItem',
            'addedAt'
          >,
          serverName: 'added_at',
        },
      },
      primaryKey: ['userId', 'albumId'],
      serverName: 'cart_item',
    },
    jwks: {
      name: 'jwks',
      columns: {
        id: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'jwks',
            'id'
          >,
        },
        publicKey: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'jwks',
            'publicKey'
          >,
          serverName: 'public_key',
        },
        privateKey: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'jwks',
            'privateKey'
          >,
          serverName: 'private_key',
        },
        createdAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'jwks',
            'createdAt'
          >,
          serverName: 'created_at',
        },
      },
      primaryKey: ['id'],
    },
    session: {
      name: 'session',
      columns: {
        id: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'session',
            'id'
          >,
        },
        expiresAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'session',
            'expiresAt'
          >,
          serverName: 'expires_at',
        },
        token: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'session',
            'token'
          >,
        },
        createdAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'session',
            'createdAt'
          >,
          serverName: 'created_at',
        },
        updatedAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'session',
            'updatedAt'
          >,
          serverName: 'updated_at',
        },
        ipAddress: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'session',
            'ipAddress'
          >,
          serverName: 'ip_address',
        },
        userAgent: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'session',
            'userAgent'
          >,
          serverName: 'user_agent',
        },
        userId: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'session',
            'userId'
          >,
          serverName: 'user_id',
        },
      },
      primaryKey: ['id'],
    },
    user: {
      name: 'user',
      columns: {
        id: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'user',
            'id'
          >,
        },
        name: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'user',
            'name'
          >,
        },
        email: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'user',
            'email'
          >,
        },
        emailVerified: {
          type: 'boolean',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'user',
            'emailVerified'
          >,
          serverName: 'email_verified',
        },
        image: {
          type: 'string',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'user',
            'image'
          >,
        },
        createdAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'user',
            'createdAt'
          >,
          serverName: 'created_at',
        },
        updatedAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'user',
            'updatedAt'
          >,
          serverName: 'updated_at',
        },
      },
      primaryKey: ['id'],
    },
    verification: {
      name: 'verification',
      columns: {
        id: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'verification',
            'id'
          >,
        },
        identifier: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'verification',
            'identifier'
          >,
        },
        value: {
          type: 'string',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'verification',
            'value'
          >,
        },
        expiresAt: {
          type: 'number',
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'verification',
            'expiresAt'
          >,
          serverName: 'expires_at',
        },
        createdAt: {
          type: 'number',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'verification',
            'createdAt'
          >,
          serverName: 'created_at',
        },
        updatedAt: {
          type: 'number',
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            'verification',
            'updatedAt'
          >,
          serverName: 'updated_at',
        },
      },
      primaryKey: ['id'],
    },
  },
  relationships: {
    album: {
      artist: [
        {
          sourceField: ['artistId'],
          destField: ['id'],
          destSchema: 'artist',
          cardinality: 'one',
        },
      ],
      cartItems: [
        {
          sourceField: ['id'],
          destField: ['albumId'],
          destSchema: 'cartItem',
          cardinality: 'many',
        },
      ],
    },
    artist: {
      albums: [
        {
          sourceField: ['id'],
          destField: ['artistId'],
          destSchema: 'album',
          cardinality: 'many',
        },
      ],
    },
    cartItem: {
      album: [
        {
          sourceField: ['albumId'],
          destField: ['id'],
          destSchema: 'album',
          cardinality: 'one',
        },
      ],
      user: [
        {
          sourceField: ['userId'],
          destField: ['id'],
          destSchema: 'user',
          cardinality: 'one',
        },
      ],
    },
    user: {
      cartItems: [
        {
          sourceField: ['id'],
          destField: ['userId'],
          destSchema: 'cartItem',
          cardinality: 'many',
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
