Things to improve in Zero:

- Make the auth token refresh work by invalidation, not returning a new value
- warn about missing index on FK it makes zero crazy slow.
- it would be nice if tx.insert() returned the value.
  - consider also have ts.update() do this? kinda bummer to pay the cost to do this if not needed
  - maybe there's a `return` flag needed on insert() and update()
- stupid to have to useZero() just to form queries
  - this would make sharing query fragments more elegant too (see artist.tsx)
  - matt is working on this separately
- Previews
  - going to do this via custom mutators / queries
- mooar data
  - we'll just explain curren status
- integrate with TS at the query layer. this would maybe get us partway to SSR and suspense - project for another time
- use real drizzle migrations - not really a zero thing
- nicer styles? - not doing the ugly styles are a feature - less goop to remove when using this as a starter
- text search
  - can be todo noted in docs/launch
- we should limit ttl to max 10m
  - erik doing
- client-only queries would significantly reduce load while typing
  - queries api is changing
- 500 errors in push don't cause revert - easy to not notice they aern't working
  - going to rework error handling
- conditional query (for when session is null and using userID in query)
  - queries api is changing


CQ TODO

- There's a new API to mutators right? Apply that.

Custom Query Notes

- don't like querify(). why can't it be off schema?
- don't like passing in separate name - can use object trick?
- don't like pattern of exposing shared queries by default - too easy to leak things
- import * as queries is handy but worried about accidentally exposing something
- we have to figure out if we're going with "pull" or "query" or what because of env vars
- preview support!
- shouldn't have to assign delegate manually
  - or maybe alternately one() should take ttl
  - or ever better preload() should just lose cleanup() completely
- processQueries -> getQueries?
